import dilate from '../dilate';

describe('test dilate', () => {
  it('testOne', () => {
    const data = [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ];

    expect(dilate(data)).toStrictEqual([
      [255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ]);
  });
  it('testTwo', () => {
    const data = [
      [0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0],
      [0, 255, 255, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 255, 255, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 255, 255, 0, 0, 0],
      [0, 0, 0, 0, 255, 255, 255, 0, 255, 255, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0],
      [0, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ];
    expect(dilate(data)).toStrictEqual([
      [0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 0, 0, 0, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ]);
  });
});
